<?php
namespace Admin\Controller;
use Admin\Controller\BaseController;
/**
 * 用户管理控制器
 * Created by PhpStorm.
 * User: admin
 * Date: 2016/7/20
 * Time: 12:09
 */
class UserController extends BaseController {

    public function _initialize(){
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 玩家列表
     */
    public function player($type='user_player',$html='player',$title= "用户列表"){
        $this->assign("page_title",$title );
        $model = D('user');
        $seek = trim($_POST['seek']);
        $pageSize = C('page_size');
        if (empty($seek)){
        	$count = $model ->relation($type)->where(" user_type = '$html' ") ->order(' add_time desc ') -> count();
        	$list = $model->relation($type)->where(" user_type = '$html' ") ->order(' add_time desc ') ->page($_GET['p'],$pageSize)->Select();
        }else{
        	$count = $model ->relation($type)->where("user_type = '$html' and (real_name LIKE '%$seek%' or tel LIKE '%$seek%' or nickname LIKE '%$seek%') ") ->order(' add_time desc ') -> count();
        	$list = $model->relation($type)->where("user_type = '$html' and (real_name LIKE '%$seek%' or tel LIKE '%$seek%' or nickname LIKE '%$seek%') ")->order(' add_time desc ') ->page($_GET['p'],$pageSize)->Select();
        	$this->assign('keyword',$seek);
        }
        $Page = new \Admin\Common\Util\MyPage($count,$pageSize);
        $page = $Page->show();
        $this->assign('page',$page);
        $this->assign('list',$list);
        $this->display($html);
    }
	/**
	 * 玩家数据更新
	 */
    public function playerUpdate(){
        $this->assign("page_title", "玩家编辑");
        $model = D('user');
        if (IS_GET){
        	$id = $_GET['id'];
        	$data = $model -> relation('user_player')-> where("id = $id") -> find();
        	if (!$data){
        		$this->error('数据未找到',U('User/player'));
        	}
        	$this->assign('data',$data);
        	$this->assign('id',$id);
        	$this->display();
        }else{
        	if ($model->relation('user_player')->save($_POST)!==false){
        		$this->success('数据修改成功');
        	}else{
        		$this->error("数据修改失败：" . $model->getError());
        	}
        }
    }
    /**
     * 删除用户数据
     * @param unknown $id 主键
     * @param unknown $type 类型
     */
    public function del($id,$type){
    	$model = D('user');
    	if ($model->relation($type)->delete($id)){
    		$this->success('删除成功');
    	}else{
    		$this->error('删除失败');
    	}
    }

    /**
     * 网吧列表
     */
    public function netbar(){


        if (!empty($_POST['netbar'])){
        	#此种情况为查询网吧名
			$this->assign("page_title","网吧用户列表" );
        	$seek = trim($_POST['netbar']);
        	$model = M('user t1');
        	$pageSize = C('page_size');
        	$count = $model ->field('t1.*,t2.title')->join('yw_user_netbar t2 on t1.id = t2.user_id')->where(" t1.user_type = 'netbar' and t2.title like '%$seek%' ") -> count();
        	$list = $model ->field('t1.*,t2.title')->join('yw_user_netbar t2 on t1.id = t2.user_id')->where(" user_type = 'netbar' and t2.title like '%$seek%' ")->page($_GET['p'],$pageSize)->Select();
        	$this->assign('keyword',$seek);
        	$Page = new \Admin\Common\Util\MyPage($count,$pageSize);
        	$page = $Page->show();
        	$this->assign('page',$page);
        	$this->assign('list',$list);
        	$this->display();
        }else{
        	$this->player('user_netbar','netbar',"网吧用户列表");
        }
    }
	/**
	 * 网吧数据更新
	 */
    public function netbarUpdate(){
        $this->assign("page_title", "网吧编辑");
        $model = D('user');
        if (IS_GET){
        	$id = $_GET['id'];
        	$data = $model -> relation('user_netbar')-> where("id = $id") -> find();
        	if (!$data){
        		$this->error('数据未找到',U('User/player'));
        	}
			$province_id = $data['province_id'];
			$city_id = $data['city_id'];
			$distract_id = $data['distract_id'];
			if(empty($province_id)) {
				$province_id = 0;
			}
			if(empty($city_id)) {
				$city_id = 0;
			}
			if(empty($distract_id)) {
				$distract_id = 0;
			}
			$this->assign("province_id", $province_id);
			$this->assign("city_id", $city_id);
			$this->assign("distract_id", $distract_id);

        	$this->assign('data',$data);
        	$this->assign('id',$id);
        	$this->display();
        }else{
        	if ($model->relation('user_netbar')->save($_POST)!==false){
				$url = U('User/netbar');
        		$this->success('数据修改成功',$url);
        	}else{
        		$this->error("数据修改失败：" . $model->getError());
        	}
        }
    }
	/**
	 * 禁用操作
	 * 将用户状态 变失效
	 */
	public function jin(){
		$j = I("post.j",'','trim');
		$q = I("post.q",'','trim');
		if(empty($j) ||empty($q)){
			echo 1;
			exit;
		}
		if($q == 'j'){ //禁用
			$_data = 0;
		}elseif($q == 'q'){
			$_data = 1;
		}
		$data['status'] = $_data ;
		$link = M('user')->where("id=$j")->save($data);
		if($link){
			echo 2;
		}else{
			echo 3;
		}
	}
	/**
	 * 审核通过
	 */
	public function netbar_ok(){
		$id = I("post.id",'','trim');
		if(empty($id)){
			echo 1;
			exit;
		}

		$_data = M('user_netbar')->field('status')->where("id=$id")->select();
		$data = $_data[0]['status'];
		if($data == 1){
			echo 1;
		}elseif($data == 0){
			$dat['status'] =1 ;
			$link = M('user_netbar')->where("id=$id")->save($dat);
			if($link){
				echo 2;
			}else{
				echo 1;
			}
		}
	}
}
